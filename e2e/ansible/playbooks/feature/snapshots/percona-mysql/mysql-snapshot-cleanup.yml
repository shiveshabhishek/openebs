---
- name: Get pvc name to verify successful pvc deletion
  shell: source ~/.profile; kubectl get pvc -n {{ namespace }} | grep {{ replace_with.0 }} | awk {'print $3'}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: pvc
  changed_when: true

- include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy.yml"
  vars:
    app_yml: "{{ volume_def }}"
    ns: "{{ namespace }}"

- include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy_check.yml"
  vars:
    ns: "{{ namespace }}"
    app: percona

- name: Confirm that the storage volume is deleted
  shell: source ~/.profile; kubectl get pvc -n {{ namespace }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'pvc' not in result.stdout"
  delay: 120
  retries: 6
  changed_when: true

- name: Confirm pvc pod has been deleted
  shell: source ~/.profile; kubectl get pods -n {{ namespace }} | grep {{ pvc.stdout }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'pvc' and 'Running' not in result.stdout"
  delay: 30
  retries: 10
  changed_when: true

- name: Delete namespace
  shell: source ~/.profile; kubectl delete ns {{ namespace }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: true


---

       - name: Get pvc name to verify successful pvc deletion
         shell: source ~/.profile; kubectl get pvc -n {{ namespace }} | grep {{ replace_with.0 }} | awk {'print $3'}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: pvc
         changed_when: true

       - include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy.yml"
         vars:
           ns: "{{ namespace }}"
           app_yml: "{{ percona_files.0 }}"

       - include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy_check.yml"
         vars:
           ns: "{{ namespace }}"
           app: percona

       - name: Confirm pvc pod has been deleted
         shell: source ~/.profile; kubectl get pods -n {{ namespace }} | grep {{ pvc.stdout }}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         until: "'pvc' and 'Running' not in result.stdout"
         delay: 30
         retries: 10
         changed_when: true

       - name: Remove the percona liveness check config map
         shell: source ~/.profile; kubectl delete cm sqltest -n {{ namespace }}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         register: result
         failed_when: "'configmap' and 'deleted' not in result.stdout"
         changed_when: true

       - name: Delete namespace
         shell: source ~/.profile; kubectl delete ns {{ namespace }}
         args:
           executable: /bin/bash
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         changed_when: true

       - name: Delete storage class
         shell: source ~/.profile; kubectl delete -f "{{ create_sc }}"
         args:
           executable: /bin/bash
         register: sc_out
         until: "'deleted' not in sc_out.stdout"
         delay: 10
         retries: 5
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         changed_when: True

       - name: Replace the replica count in openebs-storageclasses yaml
         replace:
           path: "{{ create_sc }}"
           regexp: 'openebs.io/jiva-replica-count: "{{ (node_count) |int-1 }}"'
           replace: 'openebs.io/jiva-replica-count: "{{ (node_count |int) }}"'
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

       - name: Apply storage class yaml
         shell: source ~/.profile; kubectl apply -f "{{ create_sc }}"
         args:
           executable: /bin/bash
         register: sc_out
         until: "'created' in sc_out.stdout"
         delay: 10
         retries: 5
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         changed_when: True

       - name: Remove test artifacts
         file:
           path: "{{ result_kube_home.stdout }}/{{ item }}"
           state: absent
         delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
         with_items:
           - "{{percona_files}}"

